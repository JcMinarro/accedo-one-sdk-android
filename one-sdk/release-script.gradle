/**
 * This is mainly for internal use, to tag the latest release versions of this library.
 *
 * Most be applied at the end of your script.
 */

apply plugin: 'com.github.dcendents.android-maven'
apply from: 'javadoc.gradle'

install {
    doLast {
        copy {
            from System.getProperty("user.home") + "/.m2/repository/tv/accedo/one/one-sdk"
            into "../binaries"

            exclude '**/*.xml'

            eachFile {
                if (it.relativePath.getFile(new File("binaries")).exists()) {
                    it.exclude()
                }
            }
        }
    }
}

task tag() << {
    def tagname = "release/" + version

    def stdout = new ByteArrayOutputStream()

    //Tag localy
    int exitValue = exec {
        commandLine 'git', 'tag', tagname
        standardOutput = stdout
        errorOutput = stdout
        ignoreExitValue = true
    }.getExitValue()

    if (exitValue == 0) {
        //If local tagging successful, try to upload
        exitValue = exec {
            commandLine 'git', 'push', 'origin', tagname
            standardOutput = stdout
            errorOutput = stdout
            ignoreExitValue = true
        }.getExitValue()

        //If upload failed, delete local tag
        if (exitValue != 0) {
            printlnColor(" --> Uploading tag failed, reverting: " + tagname, 31);
            exitValue = exec {
                commandLine 'git', 'tag', '-d', tagname
                standardOutput = stdout
                errorOutput = stdout
                ignoreExitValue = true
            }.getExitValue()
        } else {
            printlnColor(" --> Tagged successfuly: " + tagname, 32);
        }
    } else {
        printlnColor(" --> Already tagged with: " + tagname, 33);
    }

    stdout.close();
}

def printlnColor(text, color) {
    println("" + (char) 27 + "[" + color + "m" + text + (char) 27 + "[0m");
}

def versionNameToCode(versionName) {
    if (versionName.contains('-')) {
        versionName = versionName.split('-')[0]
    }
    
    def dots = versionName.count('.')

    if (dots == 0) {
        versionName += ".0.0"
    } else if (dots == 1) {
        versionName += ".0"
    }

    return versionName.replace('.', '') as Integer
}

android.defaultConfig.versionCode = versionNameToCode(version)
android.defaultConfig.versionName = version
android.defaultConfig.buildConfigField "String", "MODULE_NAME", "\"" + project.name + "\""
android.defaultConfig.testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

dependencies {
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:0.5'
}